// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gestor.Persistencia;

#nullable disable

namespace gestor.Persistencia.Migraciones
{
    [DbContext(typeof(AplicacionDbContext))]
    [Migration("20240219150416_MigracionInical")]
    partial class MigracionInical
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProyectoUsuario", b =>
                {
                    b.Property<int>("ProyectosIdProyecto")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("ProyectosIdProyecto", "UsuariosIdUsuario");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("ProyectoUsuario");
                });

            modelBuilder.Entity("src.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdTicket")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TicketIdTicket")
                        .HasColumnType("int");

                    b.HasKey("ComentarioId");

                    b.HasIndex("TicketIdTicket");

                    b.ToTable("comentario");

                    b.HasData(
                        new
                        {
                            ComentarioId = 1,
                            FechaHora = new DateTime(2024, 2, 19, 12, 4, 16, 726, DateTimeKind.Local).AddTicks(7596),
                            IdTicket = 2,
                            IdUsuario = 1,
                            Mensaje = "hola"
                        },
                        new
                        {
                            ComentarioId = 2,
                            FechaHora = new DateTime(2024, 2, 19, 12, 4, 16, 726, DateTimeKind.Local).AddTicks(7610),
                            IdTicket = 3,
                            IdUsuario = 2,
                            Mensaje = "bye"
                        },
                        new
                        {
                            ComentarioId = 3,
                            FechaHora = new DateTime(2024, 2, 19, 12, 4, 16, 726, DateTimeKind.Local).AddTicks(7611),
                            IdTicket = 1,
                            IdUsuario = 3,
                            Mensaje = "heladommm"
                        });
                });

            modelBuilder.Entity("src.Proyecto", b =>
                {
                    b.Property<int>("IdProyecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdProyecto");

                    b.ToTable("proyecto");

                    b.HasData(
                        new
                        {
                            IdProyecto = 1,
                            Descripcion = "apruebenos",
                            Nombre = "nayeli"
                        },
                        new
                        {
                            IdProyecto = 2,
                            Descripcion = "porfavor",
                            Nombre = "mijal"
                        });
                });

            modelBuilder.Entity("src.Ticket", b =>
                {
                    b.Property<int>("IdTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Fin")
                        .HasColumnType("date");

                    b.Property<int>("IdUsuarioUsuario")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Inicio")
                        .HasColumnType("date");

                    b.Property<int?>("ProyectoIdProyecto")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdTicket");

                    b.HasIndex("ProyectoIdProyecto");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("ticket");

                    b.HasData(
                        new
                        {
                            IdTicket = 1,
                            Descripcion = "Abonado",
                            Estado = 1,
                            Fin = new DateOnly(2022, 5, 9),
                            IdUsuarioUsuario = 0,
                            Inicio = new DateOnly(2022, 7, 8)
                        },
                        new
                        {
                            IdTicket = 2,
                            Descripcion = "No abonado",
                            Estado = 4,
                            Fin = new DateOnly(2023, 6, 10),
                            IdUsuarioUsuario = 0,
                            Inicio = new DateOnly(2023, 2, 4)
                        });
                });

            modelBuilder.Entity("src.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("comentarioId")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.ToTable("usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Contrasena = "1245",
                            Email = "mijal@gmail.com",
                            Nombre = "Mijal",
                            comentarioId = 0
                        },
                        new
                        {
                            IdUsuario = 2,
                            Contrasena = "458",
                            Email = "lucerosilvera@gmail.com",
                            Nombre = "Lucero",
                            comentarioId = 0
                        });
                });

            modelBuilder.Entity("ProyectoUsuario", b =>
                {
                    b.HasOne("src.Proyecto", null)
                        .WithMany()
                        .HasForeignKey("ProyectosIdProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("src.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("src.Comentario", b =>
                {
                    b.HasOne("src.Ticket", null)
                        .WithMany("Actividades")
                        .HasForeignKey("TicketIdTicket");
                });

            modelBuilder.Entity("src.Ticket", b =>
                {
                    b.HasOne("src.Proyecto", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ProyectoIdProyecto");

                    b.HasOne("src.Usuario", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UsuarioIdUsuario");
                });

            modelBuilder.Entity("src.Proyecto", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("src.Ticket", b =>
                {
                    b.Navigation("Actividades");
                });

            modelBuilder.Entity("src.Usuario", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
